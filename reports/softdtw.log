Traceback (most recent call last):
  File "/Users/tavenard_r/py38_data/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/tavenard_r/py38_data/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/tavenard_r/py38_data/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/tavenard_r/py38_data/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/tavenard_r/py38_data/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/Users/tavenard_r/py38_data/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/tavenard_r/py38_data/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy

from tslearn.datasets import CachedDatasets
from tslearn.preprocessing import TimeSeriesScalerMinMax
from tslearn.barycenters import softdtw_barycenter

numpy.random.seed(0)
X_train, y_train, X_test, y_test = CachedDatasets().load_dataset("Trace")
X_train = TimeSeriesScalerMinMax().fit_transform(X_train)
X_train = X_train[y_train == 0]

plt.figure(figsize=(8, 3))
for i, gamma in enumerate([.001, .1, 10.]):
    bar = softdtw_barycenter(X_train, gamma=gamma, max_iter=50, tol=1e-3)
    bar = softdtw_barycenter(X=X_train, gamma=gamma, weights=numpy.ones((len(X_train), )))

    plt.subplot(1, 3, i + 1)
    plt.title("$\\gamma = %3.f" % gamma)
    for ts in X_train:
        plt.plot(ts.ravel(), "k-", alpha=.2)
    plt.plot(bar.ravel(), "r-")
    plt.xlim(0, sz)
    plt.ylim(-4, 4)

plt.tight_layout()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mZeroDivisionError[0m                         Traceback (most recent call last)
[0;32m<ipython-input-3-2cbaba9a3b66>[0m in [0;36m<module>[0;34m[0m
[1;32m     12[0m [0mplt[0m[0;34m.[0m[0mfigure[0m[0;34m([0m[0mfigsize[0m[0;34m=[0m[0;34m([0m[0;36m8[0m[0;34m,[0m [0;36m3[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     13[0m [0;32mfor[0m [0mi[0m[0;34m,[0m [0mgamma[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0;34m[[0m[0;36m.001[0m[0;34m,[0m [0;36m.1[0m[0;34m,[0m [0;36m10.[0m[0;34m][0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 14[0;31m     [0mbar[0m [0;34m=[0m [0msoftdtw_barycenter[0m[0;34m([0m[0mX_train[0m[0;34m,[0m [0mgamma[0m[0;34m=[0m[0mgamma[0m[0;34m,[0m [0mmax_iter[0m[0;34m=[0m[0;36m50[0m[0;34m,[0m [0mtol[0m[0;34m=[0m[0;36m1e-3[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     15[0m     [0mbar[0m [0;34m=[0m [0msoftdtw_barycenter[0m[0;34m([0m[0mX[0m[0;34m=[0m[0mX_train[0m[0;34m,[0m [0mgamma[0m[0;34m=[0m[0mgamma[0m[0;34m,[0m [0mweights[0m[0;34m=[0m[0mnumpy[0m[0;34m.[0m[0mones[0m[0;34m([0m[0;34m([0m[0mlen[0m[0;34m([0m[0mX_train[0m[0;34m)[0m[0;34m,[0m [0;34m)[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     16[0m [0;34m[0m[0m

[0;32m~/Documents/costel/src/tslearn/tslearn/barycenters/softdtw.py[0m in [0;36msoftdtw_barycenter[0;34m(X, gamma, weights, method, tol, max_iter, init)[0m
[1;32m     93[0m     [0;32mif[0m [0minit[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     94[0m         [0;32mif[0m [0mcheck_equal_size[0m[0;34m([0m[0mX_[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 95[0;31m             [0mbarycenter[0m [0;34m=[0m [0meuclidean_barycenter[0m[0;34m([0m[0mX_[0m[0;34m,[0m [0mweights[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     96[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     97[0m             [0mresampled_X[0m [0;34m=[0m [0mTimeSeriesResampler[0m[0;34m([0m[0msz[0m[0;34m=[0m[0mX_[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m.[0m[0mfit_transform[0m[0;34m([0m[0mX_[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Documents/costel/src/tslearn/tslearn/barycenters/euclidean.py[0m in [0;36meuclidean_barycenter[0;34m(X, weights)[0m
[1;32m     41[0m     [0mX_[0m [0;34m=[0m [0mto_time_series_dataset[0m[0;34m([0m[0mX[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     42[0m     [0mweights[0m [0;34m=[0m [0m_set_weights[0m[0;34m([0m[0mweights[0m[0;34m,[0m [0mX_[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 43[0;31m     [0;32mreturn[0m [0mnumpy[0m[0;34m.[0m[0maverage[0m[0;34m([0m[0mX_[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;36m0[0m[0;34m,[0m [0mweights[0m[0;34m=[0m[0mweights[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m<__array_function__ internals>[0m in [0;36maverage[0;34m(*args, **kwargs)[0m

[0;32m~/py38_data/lib/python3.8/site-packages/numpy/lib/function_base.py[0m in [0;36maverage[0;34m(a, axis, weights, returned)[0m
[1;32m    407[0m         [0mscl[0m [0;34m=[0m [0mwgt[0m[0;34m.[0m[0msum[0m[0;34m([0m[0maxis[0m[0;34m=[0m[0maxis[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mresult_dtype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    408[0m         [0;32mif[0m [0mnp[0m[0;34m.[0m[0many[0m[0;34m([0m[0mscl[0m [0;34m==[0m [0;36m0.0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 409[0;31m             raise ZeroDivisionError(
[0m[1;32m    410[0m                 "Weights sum to zero, can't be normalized")
[1;32m    411[0m [0;34m[0m[0m

[0;31mZeroDivisionError[0m: Weights sum to zero, can't be normalized
ZeroDivisionError: Weights sum to zero, can't be normalized

